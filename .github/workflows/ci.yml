name: ROS2 CI with Docker

on: [push, pull_request]

jobs:
  build-and-test:
    runs-on: ubuntu-22.04  # The host runs Ubuntu, but...
    container:
      image: ghcr.io/kulkarni-raunak/ros2-devcontainer:latest  # ðŸ‘ˆ This is the Docker container where build runs
      options: --user root
    # container: osrf/ros:jazzy-desktop-full

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install tools
      run: |
        apt update && apt install -y \
          python3-colcon-common-extensions \
          python3-pip git curl
        pip3 install -U vcstool autopep8 --break-system-packages

    - name: Install dependencies
      shell: bash
      run: |
        source /opt/ros/jazzy/setup.bash
        mkdir -p /ros2_gz_ci_cd/src/submodules/vrx_extras
        vcs import /ros2_gz_ci_cd/src/submodules/vrx_extras/ < vrx_extras.rosinstall
        rosdep update
        rosdep install --from-paths src --ignore-src -r -y

    - name: Build packages
      shell: bash
      run: |
        source /opt/ros/jazzy/setup.bash
        colcon build --symlink-install --merge-install --event-handlers console_cohesion+

    - name: Run tests
      shell: bash
      run: |
        source /opt/ros/jazzy/setup.bash
        colcon test --symlink-install --merge-install
        colcon test-result --verbose

    - name: Launch VRX Simulation (headless)
      shell: bash
      run: |
        source /opt/ros/jazzy/setup.bash
        mkdir -p /ros2_gz_ci_cd/src/submodules/vrx_extras
        vcs import /ros2_gz_ci_cd/src/submodules/vrx_extras/ < vrx_extras.rosinstall
        rosdep update
        rosdep install --from-paths src --ignore-src -r -y
        colcon build --symlink-install --merge-install
        gz sim --version
        source /ros2_gz_ci_cd/install/setup.bash
        echo "Launching VRX Simulation..."
        timeout 120s ros2 launch vrx_gz competition.launch.py world:=sydney_regatta headless:=True &
        sleep 20  # Let the simulation spin up
        echo "Simulation ran for 120 seconds. Proceeding..."


  push-to-ghcr:
    runs-on: ubuntu-22.04
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Devcontainer Image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: .devcontainer/Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/ros2-devcontainer:latest